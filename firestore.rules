rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Regola generale: tutti gli utenti autenticati possono leggere tutto
    // Solo admin possono scrivere (tranne per i propri dati utente)
    match /{document=**} {
      allow read: if request.auth != null;
    }
    
    // Regole specifiche per scrittura
    
    // Users can read/write their own data, admins can modify any user
    match /users/{userId} {
      allow write: if request.auth != null && 
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // User subcollections - users can write their own, admins can modify any
    match /users/{userId}/{document=**} {
      allow write: if request.auth != null && 
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Exercise responses - users can write their own, admins can modify any
    match /exerciseResponses/{document} {
      allow write: if request.auth != null && 
        (request.resource.data.userId == request.auth.uid ||
         resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Exercise sessions - users can write their own, admins can modify any
    match /exerciseSessions/{document} {
      allow write: if request.auth != null && 
        (request.resource.data.userId == request.auth.uid ||
         resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Questionnaires - users can write their own, admins can modify any
    match /questionnaires/{document} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // User onboarding progress - users can write their own (document ID = userId)
    match /userOnboardingProgress/{userId} {
      allow write: if request.auth != null && 
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Premium requests - users can create their own
    match /premiumRequests/{document} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Admin-only write collections
    match /exercises/{document} {
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    match /appVideos/{document} {
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    match /appAudios/{document} {
      // Admin can write everything
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
      // Users can only update plays field (increment counter)
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['plays']);
    }
    
    match /appArticles/{document} {
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    match /articles/{document} {
      // Admin can write everything
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
      // Users can only update views field (increment counter)
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views']);
    }
    
    match /motivationalTips/{document} {
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
    
    // Audio content - allow users to update plays counter
    match /audioContent/{document} {
      // Admin can write everything
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
      // Users can only update plays field (increment counter)
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['plays']);
    }
    
    // All other admin collections
    match /{collection}/{document} {
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
         request.auth.token.email == 'ilgabrio@gmail.com');
    }
  }
}